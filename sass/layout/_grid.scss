.row {
  max-width: $grid-width;
  
  margin: 0 auto; //ortalama

  // .row:last-child() -->son çocuk
  // son çocuk hariç hepsi
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  // .col-1-of-2 leri tek tek yapmak yerine col- ile başlayanlar için, (^ bu işaret başlangıca işaret eder)/(* kullanılırsa col- içeren tüm classlar)($ ise col- ile bitenler)
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 {
    //css te hesaplamalar için calc() kull. Calc da sass kull.istenirse #{} kullan
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    //css te hesaplamalar için calc() kull. Calc da sass kull.istenirse #{} kullan
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    //css te hesaplamalar için calc() kull. Calc da sass kull.istenirse #{} kullan
    width: calc(
      (2 * (100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }
  .col-1-of-4 {
    //css te hesaplamalar için calc() kull. Calc da sass kull.istenirse #{} kullan
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  //   .col-2-of-4 {
  //     //css te hesaplamalar için calc() kull. Calc da sass kull.istenirse #{} kullan
  //     width: calc(2*(100%-3*#{$gutter-horizontal})/4+#{$gutter-horizontal});
  //   }
  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    //css te hesaplamalar için calc() kull. Calc da sass kull.istenirse #{} kullan
    // width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4)+ 2 * #{$gutter-horizontal});
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
